(()=>{"use strict";console.log("Hello classes here");class e{constructor(e){this.name=e,this.toDos=[]}}console.log("TEST: Hello index js here");let t,o=[];const n=document.getElementById("form_pr"),c=document.getElementById("form_td");function s(e){t=e;const n=document.querySelector(".tasks");n.textContent="",o.forEach((e=>{e.name===t&&e.toDos.forEach((e=>{const t=document.createElement("div");t.textContent=e.title,t.addEventListener("click",(()=>{})),n.appendChild(t)}))}))}n.addEventListener("submit",(n=>{n.preventDefault(),function(){const t=document.getElementById("pr_title").value,n=new e(t);o.push(n)}(),function(){const e=document.querySelector(".projects");e.textContent="",o.forEach((o=>{const n=document.createElement("div");n.textContent=o.name,n.addEventListener("click",(()=>{var e;e=o.name,t=e,console.log(t),s(o.name)})),e.appendChild(n)}))}()})),c.addEventListener("submit",(e=>{e.preventDefault(),function(e,t,o){const n=new FormData(e),c={};n.forEach(((e,t)=>c[t]=e)),c.project=o,t.forEach((e=>{e.name===o&&e.toDos.push(c)})),s(o),console.log(c),console.log(t)}(e.target,o,t)}))})(),console.log("Hello dom here");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUFBLFFBQVFDLElBQUksc0JBRUwsTUFBTUMsRUFDWEMsWUFBWUMsR0FDVkMsS0FBS0QsS0FBT0EsRUFDWkMsS0FBS0MsTUFBUSxFQUNmLEVDSkZOLFFBQVFDLElBQUksNkJBRVosSUFFSU0sRUFGQUMsRUFBYyxHQUlsQixNQUFNQyxFQUFjQyxTQUFTQyxlQUFlLFdBQ3RDQyxFQUFXRixTQUFTQyxlQUFlLFdBMkR6QyxTQUFTRSxFQUFpQkMsR0FDeEJQLEVBQWlCTyxFQUNqQixNQUFNQyxFQUFXTCxTQUFTTSxjQUFjLFVBQ3hDRCxFQUFTRSxZQUFjLEdBRXZCVCxFQUFZVSxTQUFTQyxJQUNmQSxFQUFRZixPQUFTRyxHQUNuQlksRUFBUWIsTUFBTVksU0FBU0UsSUFDckIsTUFBTUMsRUFBTVgsU0FBU1ksY0FBYyxPQUNuQ0QsRUFBSUosWUFBY0csRUFBS0csTUFDdkJGLEVBQUlHLGlCQUFpQixTQUFTLFNBRzlCVCxFQUFTVSxZQUFZSixFQUFJLEdBRTdCLEdBRUosQ0ExRUFaLEVBQVllLGlCQUFpQixVQUFXRSxJQUN0Q0EsRUFBRUMsaUJBV0osV0FDRSxNQUFNQyxFQUFhbEIsU0FBU0MsZUFBZSxZQUFZa0IsTUFDakRDLEVBQWEsSUFBSTVCLEVBQWlCMEIsR0FDeENwQixFQUFZdUIsS0FBS0QsRUFDbkIsQ0FkRUUsR0FrQ0YsV0FDRSxNQUFNQyxFQUFjdkIsU0FBU00sY0FBYyxhQUMzQ2lCLEVBQVloQixZQUFjLEdBRTFCVCxFQUFZVSxTQUFTQyxJQUNuQixNQUFNRSxFQUFNWCxTQUFTWSxjQUFjLE9BQ25DRCxFQUFJSixZQUFjRSxFQUFRZixLQUMxQmlCLEVBQUlHLGlCQUFpQixTQUFTLEtBUWxDLElBQThCVixJQVBISyxFQUFRZixLQVFqQ0csRUFBaUJPLEVBQ2pCZCxRQUFRQyxJQUFJTSxHQVJSTSxFQUFpQk0sRUFBUWYsS0FBSyxJQUVoQzZCLEVBQVlSLFlBQVlKLEVBQUksR0FFaEMsQ0E5Q0VhLEVBQTJCLElBRzdCdEIsRUFBU1ksaUJBQWlCLFVBQVdFLElBQ25DQSxFQUFFQyxpQkFXSixTQUFpQlEsRUFBWTNCLEVBQWFELEdBQ3hDLE1BQU02QixFQUFhLElBQUlDLFNBQVNGLEdBQzFCRyxFQUFjLENBQUMsRUFDckJGLEVBQVdsQixTQUFRLENBQUNXLEVBQU9VLElBQVNELEVBQVlDLEdBQU9WLElBQ3ZEUyxFQUFZbkIsUUFBVVosRUFFdEJDLEVBQVlVLFNBQVNDLElBQ2ZBLEVBQVFmLE9BQVNHLEdBQ25CWSxFQUFRYixNQUFNeUIsS0FBS08sRUFDckIsSUFHRnpCLEVBQWlCTixHQUVqQlAsUUFBUUMsSUFBSXFDLEdBQ1p0QyxRQUFRQyxJQUFJTyxFQUNkLENBekJFZ0MsQ0FEbUJkLEVBQUVlLE9BQ0RqQyxFQUFhRCxFQUFlLEcsS0NwQmxEUCxRQUFRQyxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMtdG9kby1saXN0Ly4vc3JjL2NsYXNzZXMuanMiLCJ3ZWJwYWNrOi8vanMtdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2pzLXRvZG8tbGlzdC8uL3NyYy9kb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc29sZS5sb2coXCJIZWxsbyBjbGFzc2VzIGhlcmVcIik7XG5cbmV4cG9ydCBjbGFzcyBQcm9qZWN0Q29uc3RydWN0IHtcbiAgY29uc3RydWN0b3IobmFtZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy50b0RvcyA9IFtdO1xuICB9XG59XG4iLCJpbXBvcnQgeyBQcm9qZWN0Q29uc3RydWN0IH0gZnJvbSBcIi4vY2xhc3Nlcy5qc1wiO1xuXG5jb25zb2xlLmxvZyhcIlRFU1Q6IEhlbGxvIGluZGV4IGpzIGhlcmVcIik7XG5cbmxldCBhcnJQcm9qZWN0cyA9IFtdO1xuXG5sZXQgY3VycmVudFByb2plY3QgPSB1bmRlZmluZWQ7XG5cbmNvbnN0IHByb2plY3RGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtX3ByXCIpO1xuY29uc3QgdG9kb0Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvcm1fdGRcIik7XG5cbnByb2plY3RGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBhZGRQcm9qZWN0KGFyclByb2plY3RzLCBjdXJyZW50UHJvamVjdCwgUHJvamVjdENvbnN0cnVjdCk7XG4gIHVwZFByb2plY3RMaXN0KGFyclByb2plY3RzKTtcbn0pO1xuXG50b2RvRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgZm9ybUZpZWxkcyA9IGUudGFyZ2V0O1xuICBhZGRUb2RvKGZvcm1GaWVsZHMsIGFyclByb2plY3RzLCBjdXJyZW50UHJvamVjdCk7XG59KTtcblxuZnVuY3Rpb24gYWRkUHJvamVjdCgpIHtcbiAgY29uc3QgdGl0bGVWYWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJfdGl0bGVcIikudmFsdWU7XG4gIGNvbnN0IG5ld1Byb2plY3QgPSBuZXcgUHJvamVjdENvbnN0cnVjdCh0aXRsZVZhbHVlKTtcbiAgYXJyUHJvamVjdHMucHVzaChuZXdQcm9qZWN0KTtcbn1cblxuZnVuY3Rpb24gYWRkVG9kbyhmb3JtRmllbGRzLCBhcnJQcm9qZWN0cywgY3VycmVudFByb2plY3QpIHtcbiAgY29uc3QgbXlGb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShmb3JtRmllbGRzKTtcbiAgY29uc3QgZm9ybURhdGFPYmogPSB7fTtcbiAgbXlGb3JtRGF0YS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiAoZm9ybURhdGFPYmpba2V5XSA9IHZhbHVlKSk7XG4gIGZvcm1EYXRhT2JqLnByb2plY3QgPSBjdXJyZW50UHJvamVjdDtcblxuICBhcnJQcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgaWYgKHByb2plY3QubmFtZSA9PT0gY3VycmVudFByb2plY3QpIHtcbiAgICAgIHByb2plY3QudG9Eb3MucHVzaChmb3JtRGF0YU9iaik7XG4gICAgfVxuICB9KTtcblxuICBsaXN0Q3VycmVudFRvRG9zKGN1cnJlbnRQcm9qZWN0KTtcblxuICBjb25zb2xlLmxvZyhmb3JtRGF0YU9iaik7XG4gIGNvbnNvbGUubG9nKGFyclByb2plY3RzKTtcbn1cblxuZnVuY3Rpb24gdXBkUHJvamVjdExpc3QoKSB7XG4gIGNvbnN0IHByb2plY3RMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0c1wiKTtcbiAgcHJvamVjdExpc3QudGV4dENvbnRlbnQgPSBcIlwiO1xuXG4gIGFyclByb2plY3RzLmZvckVhY2goKHByb2plY3QpID0+IHtcbiAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGRpdi50ZXh0Q29udGVudCA9IHByb2plY3QubmFtZTtcbiAgICBkaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHNlbGVjdEN1cnJlbnRQcm9qZWN0KHByb2plY3QubmFtZSk7XG4gICAgICBsaXN0Q3VycmVudFRvRG9zKHByb2plY3QubmFtZSk7XG4gICAgfSk7XG4gICAgcHJvamVjdExpc3QuYXBwZW5kQ2hpbGQoZGl2KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNlbGVjdEN1cnJlbnRQcm9qZWN0KHByb2plY3RUaXRsZSkge1xuICBjdXJyZW50UHJvamVjdCA9IHByb2plY3RUaXRsZTtcbiAgY29uc29sZS5sb2coY3VycmVudFByb2plY3QpO1xuICByZXR1cm4gY3VycmVudFByb2plY3Q7XG59XG5cbmZ1bmN0aW9uIGxpc3RDdXJyZW50VG9Eb3MocHJvamVjdFRpdGxlKSB7XG4gIGN1cnJlbnRQcm9qZWN0ID0gcHJvamVjdFRpdGxlO1xuICBjb25zdCB0b2RvTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFza3NcIik7XG4gIHRvZG9MaXN0LnRleHRDb250ZW50ID0gXCJcIjtcblxuICBhcnJQcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgaWYgKHByb2plY3QubmFtZSA9PT0gY3VycmVudFByb2plY3QpIHtcbiAgICAgIHByb2plY3QudG9Eb3MuZm9yRWFjaCgodG9kbykgPT4ge1xuICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBkaXYudGV4dENvbnRlbnQgPSB0b2RvLnRpdGxlO1xuICAgICAgICBkaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAvLyBleHBhbmRUb2RvKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0b2RvTGlzdC5hcHBlbmRDaGlsZChkaXYpO1xuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn1cbiIsImNvbnNvbGUubG9nKFwiSGVsbG8gZG9tIGhlcmVcIik7XG4iXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsIlByb2plY3RDb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJ0aGlzIiwidG9Eb3MiLCJjdXJyZW50UHJvamVjdCIsImFyclByb2plY3RzIiwicHJvamVjdEZvcm0iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwidG9kb0Zvcm0iLCJsaXN0Q3VycmVudFRvRG9zIiwicHJvamVjdFRpdGxlIiwidG9kb0xpc3QiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJmb3JFYWNoIiwicHJvamVjdCIsInRvZG8iLCJkaXYiLCJjcmVhdGVFbGVtZW50IiwidGl0bGUiLCJhZGRFdmVudExpc3RlbmVyIiwiYXBwZW5kQ2hpbGQiLCJlIiwicHJldmVudERlZmF1bHQiLCJ0aXRsZVZhbHVlIiwidmFsdWUiLCJuZXdQcm9qZWN0IiwicHVzaCIsImFkZFByb2plY3QiLCJwcm9qZWN0TGlzdCIsInVwZFByb2plY3RMaXN0IiwiZm9ybUZpZWxkcyIsIm15Rm9ybURhdGEiLCJGb3JtRGF0YSIsImZvcm1EYXRhT2JqIiwia2V5IiwiYWRkVG9kbyIsInRhcmdldCJdLCJzb3VyY2VSb290IjoiIn0=