(()=>{"use strict";console.log("Hello classes here");class e{constructor(e){this.name=e,this.toDos=[]}}console.log("TEST: Hello index js here");let t,n=[];const o=document.getElementById("form_pr"),c=document.getElementById("form_td");function s(e){return t=e,console.log(t),t}function l(e){t=e;const o=document.querySelector(".tasks");o.textContent="",n.forEach((e=>{e.name===t&&e.toDos.forEach((e=>{const t=document.createElement("div");t.textContent=e.title,t.addEventListener("click",(()=>{})),o.appendChild(t)}))}))}o.addEventListener("submit",(t=>{t.preventDefault(),function(){const t=document.getElementById("pr_title").value,o=new e(t);n.push(o)}(),function(){const e=document.querySelector(".projects");e.textContent="",n.forEach((t=>{const n=document.createElement("div");n.textContent=t.name,n.addEventListener("click",(()=>{s(t.name),l(t.name)})),e.appendChild(n)}))}(),s(newProject)})),c.addEventListener("submit",(e=>{e.preventDefault(),function(e,t,n){const o=new FormData(e),c={};o.forEach(((e,t)=>c[t]=e)),c.project=n,t.forEach((e=>{e.name===n&&e.toDos.push(c)})),l(n),console.log(c),console.log(t)}(e.target,n,t)}))})(),console.log("Hello dom here");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUFBLFFBQVFDLElBQUksc0JBRUwsTUFBTUMsRUFDWEMsWUFBWUMsR0FDVkMsS0FBS0QsS0FBT0EsRUFDWkMsS0FBS0MsTUFBUSxFQUNmLEVDSkZOLFFBQVFDLElBQUksNkJBRVosSUFFSU0sRUFGQUMsRUFBYyxHQUlsQixNQUFNQyxFQUFjQyxTQUFTQyxlQUFlLFdBQ3RDQyxFQUFXRixTQUFTQyxlQUFlLFdBdUR6QyxTQUFTRSxFQUFxQkMsR0FHNUIsT0FGQVAsRUFBaUJPLEVBQ2pCZCxRQUFRQyxJQUFJTSxHQUNMQSxDQUNULENBRUEsU0FBU1EsRUFBaUJELEdBQ3hCUCxFQUFpQk8sRUFDakIsTUFBTUUsRUFBV04sU0FBU08sY0FBYyxVQUN4Q0QsRUFBU0UsWUFBYyxHQUV2QlYsRUFBWVcsU0FBU0MsSUFDZkEsRUFBUWhCLE9BQVNHLEdBQ25CYSxFQUFRZCxNQUFNYSxTQUFTRSxJQUNyQixNQUFNQyxFQUFNWixTQUFTYSxjQUFjLE9BQ25DRCxFQUFJSixZQUFjRyxFQUFLRyxNQUN2QkYsRUFBSUcsaUJBQWlCLFNBQVMsU0FHOUJULEVBQVNVLFlBQVlKLEVBQUksR0FFN0IsR0FFSixDQTVFQWIsRUFBWWdCLGlCQUFpQixVQUFXRSxJQUN0Q0EsRUFBRUMsaUJBWUosV0FDRSxNQUFNQyxFQUFhbkIsU0FBU0MsZUFBZSxZQUFZbUIsTUFDakRDLEVBQWEsSUFBSTdCLEVBQWlCMkIsR0FDeENyQixFQUFZd0IsS0FBS0QsRUFFbkIsQ0FoQkVFLEdBb0NGLFdBQ0UsTUFBTUMsRUFBY3hCLFNBQVNPLGNBQWMsYUFDM0NpQixFQUFZaEIsWUFBYyxHQUUxQlYsRUFBWVcsU0FBU0MsSUFDbkIsTUFBTUUsRUFBTVosU0FBU2EsY0FBYyxPQUNuQ0QsRUFBSUosWUFBY0UsRUFBUWhCLEtBQzFCa0IsRUFBSUcsaUJBQWlCLFNBQVMsS0FDNUJaLEVBQXFCTyxFQUFRaEIsTUFDN0JXLEVBQWlCSyxFQUFRaEIsS0FBSyxJQUVoQzhCLEVBQVlSLFlBQVlKLEVBQUksR0FFaEMsQ0FoREVhLEdBQ0F0QixFQUFxQmtCLFdBQVcsSUFHbENuQixFQUFTYSxpQkFBaUIsVUFBV0UsSUFDbkNBLEVBQUVDLGlCQVlKLFNBQWlCUSxFQUFZNUIsRUFBYUQsR0FDeEMsTUFBTThCLEVBQWEsSUFBSUMsU0FBU0YsR0FDMUJHLEVBQWMsQ0FBQyxFQUNyQkYsRUFBV2xCLFNBQVEsQ0FBQ1csRUFBT1UsSUFBU0QsRUFBWUMsR0FBT1YsSUFDdkRTLEVBQVluQixRQUFVYixFQUV0QkMsRUFBWVcsU0FBU0MsSUFDZkEsRUFBUWhCLE9BQVNHLEdBQ25CYSxFQUFRZCxNQUFNMEIsS0FBS08sRUFDckIsSUFHRnhCLEVBQWlCUixHQUVqQlAsUUFBUUMsSUFBSXNDLEdBQ1p2QyxRQUFRQyxJQUFJTyxFQUNkLENBMUJFaUMsQ0FEbUJkLEVBQUVlLE9BQ0RsQyxFQUFhRCxFQUFlLEcsS0NyQmxEUCxRQUFRQyxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMtdG9kby1saXN0Ly4vc3JjL2NsYXNzZXMuanMiLCJ3ZWJwYWNrOi8vanMtdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2pzLXRvZG8tbGlzdC8uL3NyYy9kb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc29sZS5sb2coXCJIZWxsbyBjbGFzc2VzIGhlcmVcIik7XG5cbmV4cG9ydCBjbGFzcyBQcm9qZWN0Q29uc3RydWN0IHtcbiAgY29uc3RydWN0b3IobmFtZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy50b0RvcyA9IFtdO1xuICB9XG59XG4iLCJpbXBvcnQgeyBQcm9qZWN0Q29uc3RydWN0IH0gZnJvbSBcIi4vY2xhc3Nlcy5qc1wiO1xuXG5jb25zb2xlLmxvZyhcIlRFU1Q6IEhlbGxvIGluZGV4IGpzIGhlcmVcIik7XG5cbmxldCBhcnJQcm9qZWN0cyA9IFtdO1xuXG5sZXQgY3VycmVudFByb2plY3QgPSB1bmRlZmluZWQ7XG5cbmNvbnN0IHByb2plY3RGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtX3ByXCIpO1xuY29uc3QgdG9kb0Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvcm1fdGRcIik7XG5cbnByb2plY3RGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBhZGRQcm9qZWN0KGFyclByb2plY3RzLCBjdXJyZW50UHJvamVjdCwgUHJvamVjdENvbnN0cnVjdCk7XG4gIHVwZFByb2plY3RMaXN0KGFyclByb2plY3RzKTtcbiAgc2VsZWN0Q3VycmVudFByb2plY3QobmV3UHJvamVjdCk7IC8vLyDQv9GA0L7QstC10YDQuNGC0Ywg0YDQsNCx0L7RgtCw0LXRgiDQu9C4XG59KTtcblxudG9kb0Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IGZvcm1GaWVsZHMgPSBlLnRhcmdldDtcbiAgYWRkVG9kbyhmb3JtRmllbGRzLCBhcnJQcm9qZWN0cywgY3VycmVudFByb2plY3QpO1xufSk7XG5cbmZ1bmN0aW9uIGFkZFByb2plY3QoKSB7XG4gIGNvbnN0IHRpdGxlVmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByX3RpdGxlXCIpLnZhbHVlO1xuICBjb25zdCBuZXdQcm9qZWN0ID0gbmV3IFByb2plY3RDb25zdHJ1Y3QodGl0bGVWYWx1ZSk7XG4gIGFyclByb2plY3RzLnB1c2gobmV3UHJvamVjdCk7XG4gIHJldHVybiBuZXdQcm9qZWN0O1xufVxuXG5mdW5jdGlvbiBhZGRUb2RvKGZvcm1GaWVsZHMsIGFyclByb2plY3RzLCBjdXJyZW50UHJvamVjdCkge1xuICBjb25zdCBteUZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGZvcm1GaWVsZHMpO1xuICBjb25zdCBmb3JtRGF0YU9iaiA9IHt9O1xuICBteUZvcm1EYXRhLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IChmb3JtRGF0YU9ialtrZXldID0gdmFsdWUpKTtcbiAgZm9ybURhdGFPYmoucHJvamVjdCA9IGN1cnJlbnRQcm9qZWN0O1xuXG4gIGFyclByb2plY3RzLmZvckVhY2goKHByb2plY3QpID0+IHtcbiAgICBpZiAocHJvamVjdC5uYW1lID09PSBjdXJyZW50UHJvamVjdCkge1xuICAgICAgcHJvamVjdC50b0Rvcy5wdXNoKGZvcm1EYXRhT2JqKTtcbiAgICB9XG4gIH0pO1xuXG4gIGxpc3RDdXJyZW50VG9Eb3MoY3VycmVudFByb2plY3QpOyAvLy8g0J/QtdGA0LXQvdC10YHRgtC4INGN0YLQviDQsiDRhNGD0L3QutGG0LjRjiwg0LrQvtGC0L7RgNCw0Y8g0LLRi9C30YvQstCw0LXRgiDQstC10YHRjCDQv9GA0L7RhtC10YHRgVxuXG4gIGNvbnNvbGUubG9nKGZvcm1EYXRhT2JqKTtcbiAgY29uc29sZS5sb2coYXJyUHJvamVjdHMpO1xufVxuXG5mdW5jdGlvbiB1cGRQcm9qZWN0TGlzdCgpIHtcbiAgY29uc3QgcHJvamVjdExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3RzXCIpO1xuICBwcm9qZWN0TGlzdC50ZXh0Q29udGVudCA9IFwiXCI7XG5cbiAgYXJyUHJvamVjdHMuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZGl2LnRleHRDb250ZW50ID0gcHJvamVjdC5uYW1lO1xuICAgIGRpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgc2VsZWN0Q3VycmVudFByb2plY3QocHJvamVjdC5uYW1lKTtcbiAgICAgIGxpc3RDdXJyZW50VG9Eb3MocHJvamVjdC5uYW1lKTtcbiAgICB9KTtcbiAgICBwcm9qZWN0TGlzdC5hcHBlbmRDaGlsZChkaXYpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gc2VsZWN0Q3VycmVudFByb2plY3QocHJvamVjdFRpdGxlKSB7XG4gIGN1cnJlbnRQcm9qZWN0ID0gcHJvamVjdFRpdGxlO1xuICBjb25zb2xlLmxvZyhjdXJyZW50UHJvamVjdCk7XG4gIHJldHVybiBjdXJyZW50UHJvamVjdDtcbn1cblxuZnVuY3Rpb24gbGlzdEN1cnJlbnRUb0Rvcyhwcm9qZWN0VGl0bGUpIHtcbiAgY3VycmVudFByb2plY3QgPSBwcm9qZWN0VGl0bGU7XG4gIGNvbnN0IHRvZG9MaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrc1wiKTtcbiAgdG9kb0xpc3QudGV4dENvbnRlbnQgPSBcIlwiO1xuXG4gIGFyclByb2plY3RzLmZvckVhY2goKHByb2plY3QpID0+IHtcbiAgICBpZiAocHJvamVjdC5uYW1lID09PSBjdXJyZW50UHJvamVjdCkge1xuICAgICAgcHJvamVjdC50b0Rvcy5mb3JFYWNoKCh0b2RvKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGRpdi50ZXh0Q29udGVudCA9IHRvZG8udGl0bGU7XG4gICAgICAgIGRpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgIC8vIGV4cGFuZFRvZG8oKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRvZG9MaXN0LmFwcGVuZENoaWxkKGRpdik7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufVxuIiwiY29uc29sZS5sb2coXCJIZWxsbyBkb20gaGVyZVwiKTtcbiJdLCJuYW1lcyI6WyJjb25zb2xlIiwibG9nIiwiUHJvamVjdENvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwibmFtZSIsInRoaXMiLCJ0b0RvcyIsImN1cnJlbnRQcm9qZWN0IiwiYXJyUHJvamVjdHMiLCJwcm9qZWN0Rm9ybSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ0b2RvRm9ybSIsInNlbGVjdEN1cnJlbnRQcm9qZWN0IiwicHJvamVjdFRpdGxlIiwibGlzdEN1cnJlbnRUb0RvcyIsInRvZG9MaXN0IiwicXVlcnlTZWxlY3RvciIsInRleHRDb250ZW50IiwiZm9yRWFjaCIsInByb2plY3QiLCJ0b2RvIiwiZGl2IiwiY3JlYXRlRWxlbWVudCIsInRpdGxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFwcGVuZENoaWxkIiwiZSIsInByZXZlbnREZWZhdWx0IiwidGl0bGVWYWx1ZSIsInZhbHVlIiwibmV3UHJvamVjdCIsInB1c2giLCJhZGRQcm9qZWN0IiwicHJvamVjdExpc3QiLCJ1cGRQcm9qZWN0TGlzdCIsImZvcm1GaWVsZHMiLCJteUZvcm1EYXRhIiwiRm9ybURhdGEiLCJmb3JtRGF0YU9iaiIsImtleSIsImFkZFRvZG8iLCJ0YXJnZXQiXSwic291cmNlUm9vdCI6IiJ9